<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Sheet extends \App\Entity\Sheet implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'sownAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'plantedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'stockSeedReceivedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'stockMaleSeedsCount', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'stockFemaleSeedsCount', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'plantsCount', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'note', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'smallTransplantedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'bigTransplantedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'pollinateStartedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'pollinateEndedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'harvestStartedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'harvestEndedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'progressions', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'assignments', 'createdBy', 'updatedBy', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'sownAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'plantedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'stockSeedReceivedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'stockMaleSeedsCount', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'stockFemaleSeedsCount', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'plantsCount', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'note', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'smallTransplantedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'bigTransplantedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'pollinateStartedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'pollinateEndedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'harvestStartedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'harvestEndedAt', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'progressions', '' . "\0" . 'App\\Entity\\Sheet' . "\0" . 'assignments', 'createdBy', 'updatedBy', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Sheet $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSownAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSownAt', []);

        return parent::getSownAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSownAt(?\DateTimeInterface $sownAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSownAt', [$sownAt]);

        return parent::setSownAt($sownAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlantedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlantedAt', []);

        return parent::getPlantedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlantedAt(?\DateTimeInterface $plantedAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlantedAt', [$plantedAt]);

        return parent::setPlantedAt($plantedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getStockSeedReceivedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockSeedReceivedAt', []);

        return parent::getStockSeedReceivedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockSeedReceivedAt(?\DateTimeInterface $stockSeedReceivedAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockSeedReceivedAt', [$stockSeedReceivedAt]);

        return parent::setStockSeedReceivedAt($stockSeedReceivedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getStockMaleSeedsCount(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockMaleSeedsCount', []);

        return parent::getStockMaleSeedsCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockMaleSeedsCount(?float $stockMaleSeedsCount): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockMaleSeedsCount', [$stockMaleSeedsCount]);

        return parent::setStockMaleSeedsCount($stockMaleSeedsCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getStockFemaleSeedsCount(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockFemaleSeedsCount', []);

        return parent::getStockFemaleSeedsCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockFemaleSeedsCount(?float $stockFemaleSeedsCount): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockFemaleSeedsCount', [$stockFemaleSeedsCount]);

        return parent::setStockFemaleSeedsCount($stockFemaleSeedsCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlantsCount(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlantsCount', []);

        return parent::getPlantsCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlantsCount(?float $plantsCount): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlantsCount', [$plantsCount]);

        return parent::setPlantsCount($plantsCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getNote(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', []);

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function setNote(?string $note): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNote', [$note]);

        return parent::setNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getSmallTransplantedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSmallTransplantedAt', []);

        return parent::getSmallTransplantedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSmallTransplantedAt(?\DateTimeInterface $smallTransplantedAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSmallTransplantedAt', [$smallTransplantedAt]);

        return parent::setSmallTransplantedAt($smallTransplantedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getBigTransplantedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBigTransplantedAt', []);

        return parent::getBigTransplantedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setBigTransplantedAt(?\DateTimeInterface $bigTransplantedAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBigTransplantedAt', [$bigTransplantedAt]);

        return parent::setBigTransplantedAt($bigTransplantedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getPollinateStartedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPollinateStartedAt', []);

        return parent::getPollinateStartedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPollinateStartedAt(?\DateTimeInterface $pollinateStartedAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPollinateStartedAt', [$pollinateStartedAt]);

        return parent::setPollinateStartedAt($pollinateStartedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getPollinateEndedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPollinateEndedAt', []);

        return parent::getPollinateEndedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPollinateEndedAt(?\DateTimeInterface $pollinateEndedAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPollinateEndedAt', [$pollinateEndedAt]);

        return parent::setPollinateEndedAt($pollinateEndedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getHarvestStartedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHarvestStartedAt', []);

        return parent::getHarvestStartedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setHarvestStartedAt(?\DateTimeInterface $harvestStartedAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHarvestStartedAt', [$harvestStartedAt]);

        return parent::setHarvestStartedAt($harvestStartedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getHarvestEndedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHarvestEndedAt', []);

        return parent::getHarvestEndedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setHarvestEndedAt(?\DateTimeInterface $harvestEndedAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHarvestEndedAt', [$harvestEndedAt]);

        return parent::setHarvestEndedAt($harvestEndedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgressions(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgressions', []);

        return parent::getProgressions();
    }

    /**
     * {@inheritDoc}
     */
    public function addProgression(\App\Entity\Progression $progression): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProgression', [$progression]);

        return parent::addProgression($progression);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProgression(\App\Entity\Progression $progression): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProgression', [$progression]);

        return parent::removeProgression($progression);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssignments(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssignments', []);

        return parent::getAssignments();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssignment(\App\Entity\Assignment $assignment): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssignment', [$assignment]);

        return parent::addAssignment($assignment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssignment(\App\Entity\Assignment $assignment): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssignment', [$assignment]);

        return parent::removeAssignment($assignment);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy(\App\Entity\User $createdBy): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy(\App\Entity\User $updatedBy): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$updatedBy]);

        return parent::setUpdatedBy($updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt): \App\Entity\Sheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

}
