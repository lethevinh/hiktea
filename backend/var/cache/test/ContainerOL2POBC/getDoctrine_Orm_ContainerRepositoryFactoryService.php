<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'doctrine.orm.container_repository_factory' shared service.

include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Repository/RepositoryFactory.php';
include_once $this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Repository/ContainerRepositoryFactory.php';

return $this->privates['doctrine.orm.container_repository_factory'] = new \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory(new \Symfony\Component\DependencyInjection\ServiceLocator(array('App\\Repository\\AssignmentRepository' => function () {
    return ($this->privates['App\Repository\AssignmentRepository'] ?? $this->load('getAssignmentRepositoryService.php'));
}, 'App\\Repository\\CropRepository' => function () {
    return ($this->privates['App\Repository\CropRepository'] ?? $this->load('getCropRepositoryService.php'));
}, 'App\\Repository\\CustomerRepository' => function () {
    return ($this->privates['App\Repository\CustomerRepository'] ?? $this->load('getCustomerRepositoryService.php'));
}, 'App\\Repository\\FarmRepository' => function () {
    return ($this->privates['App\Repository\FarmRepository'] ?? $this->load('getFarmRepositoryService.php'));
}, 'App\\Repository\\GreenhouseRepository' => function () {
    return ($this->privates['App\Repository\GreenhouseRepository'] ?? $this->load('getGreenhouseRepositoryService.php'));
}, 'App\\Repository\\HarvestRepository' => function () {
    return ($this->privates['App\Repository\HarvestRepository'] ?? $this->load('getHarvestRepositoryService.php'));
}, 'App\\Repository\\OrderItemRepository' => function () {
    return ($this->privates['App\Repository\OrderItemRepository'] ?? $this->load('getOrderItemRepositoryService.php'));
}, 'App\\Repository\\OrderRepository' => function () {
    return ($this->privates['App\Repository\OrderRepository'] ?? $this->load('getOrderRepositoryService.php'));
}, 'App\\Repository\\PhaseRepository' => function () {
    return ($this->privates['App\Repository\PhaseRepository'] ?? $this->load('getPhaseRepositoryService.php'));
}, 'App\\Repository\\PollinateRepository' => function () {
    return ($this->privates['App\Repository\PollinateRepository'] ?? $this->load('getPollinateRepositoryService.php'));
}, 'App\\Repository\\ProgressionRepository' => function () {
    return ($this->privates['App\Repository\ProgressionRepository'] ?? $this->load('getProgressionRepositoryService.php'));
}, 'App\\Repository\\SheetRepository' => function () {
    return ($this->privates['App\Repository\SheetRepository'] ?? $this->load('getSheetRepositoryService.php'));
}, 'App\\Repository\\SowingRepository' => function () {
    return ($this->privates['App\Repository\SowingRepository'] ?? $this->load('getSowingRepositoryService.php'));
}, 'App\\Repository\\TransplantRepository' => function () {
    return ($this->privates['App\Repository\TransplantRepository'] ?? $this->load('getTransplantRepositoryService.php'));
}, 'App\\Repository\\UnitRepository' => function () {
    return ($this->privates['App\Repository\UnitRepository'] ?? $this->load('getUnitRepositoryService.php'));
}, 'App\\Repository\\UserRepository' => function () {
    return ($this->privates['App\Repository\UserRepository'] ?? $this->load('getUserRepositoryService.php'));
}, 'App\\Repository\\VarietyRepository' => function () {
    return ($this->privates['App\Repository\VarietyRepository'] ?? $this->load('getVarietyRepositoryService.php'));
})));
