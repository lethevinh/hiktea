<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'doctrine.orm.default_entity_manager' shared service.

include_once $this->targetDirs[3].'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/Cache.php';
include_once $this->targetDirs[3].'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/FlushableCache.php';
include_once $this->targetDirs[3].'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/ClearableCache.php';
include_once $this->targetDirs[3].'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiGetCache.php';
include_once $this->targetDirs[3].'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiDeleteCache.php';
include_once $this->targetDirs[3].'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiPutCache.php';
include_once $this->targetDirs[3].'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiOperationCache.php';
include_once $this->targetDirs[3].'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/CacheProvider.php';
include_once $this->targetDirs[3].'/vendor/symfony/cache/DoctrineProvider.php';
include_once $this->targetDirs[3].'/vendor/doctrine/persistence/lib/Doctrine/Common/Persistence/Mapping/Driver/MappingDriver.php';
include_once $this->targetDirs[3].'/vendor/doctrine/persistence/lib/Doctrine/Common/Persistence/Mapping/Driver/AnnotationDriver.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/Driver/AnnotationDriver.php';
include_once $this->targetDirs[3].'/vendor/doctrine/persistence/lib/Doctrine/Common/Persistence/Mapping/Driver/MappingDriverChain.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/NamingStrategy.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/UnderscoreNamingStrategy.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/QuoteStrategy.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/DefaultQuoteStrategy.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/EntityListenerResolver.php';
include_once $this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Mapping/EntityListenerServiceResolver.php';
include_once $this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Mapping/ContainerAwareEntityListenerResolver.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Repository/RepositoryFactory.php';
include_once $this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Repository/ContainerRepositoryFactory.php';
include_once $this->targetDirs[3].'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Configuration.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/Configuration.php';
include_once $this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/ManagerConfigurator.php';
include_once $this->targetDirs[3].'/vendor/doctrine/persistence/lib/Doctrine/Common/Persistence/ObjectManager.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/EntityManagerInterface.php';
include_once $this->targetDirs[3].'/vendor/doctrine/orm/lib/Doctrine/ORM/EntityManager.php';

$a = new \Symfony\Component\Cache\DoctrineProvider(($this->privates['doctrine.system_cache_pool'] ?? $this->load('getDoctrine_SystemCachePoolService.php')));

$b = new \Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain();
$b->addDriver(new \Doctrine\ORM\Mapping\Driver\AnnotationDriver(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()), $this->getParameter('api_platform.resource_class_directories')), 'App\\Entity');

$c = new \Doctrine\ORM\Configuration();
$c->setEntityNamespaces(array('App' => 'App\\Entity'));
$c->setMetadataCacheImpl($a);
$c->setQueryCacheImpl($a);
$c->setResultCacheImpl(new \Symfony\Component\Cache\DoctrineProvider(($this->privates['doctrine.result_cache_pool'] ?? $this->load('getDoctrine_ResultCachePoolService.php'))));
$c->setMetadataDriverImpl($b);
$c->setProxyDir(($this->targetDirs[0].'/doctrine/orm/Proxies'));
$c->setProxyNamespace('Proxies');
$c->setAutoGenerateProxyClasses(false);
$c->setClassMetadataFactoryName('Doctrine\\ORM\\Mapping\\ClassMetadataFactory');
$c->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
$c->setNamingStrategy(new \Doctrine\ORM\Mapping\UnderscoreNamingStrategy());
$c->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
$c->setEntityListenerResolver(new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver($this));
$c->setRepositoryFactory(new \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory(new \Symfony\Component\DependencyInjection\ServiceLocator(array('App\\Repository\\AssignmentRepository' => function () {
    return ($this->privates['App\Repository\AssignmentRepository'] ?? $this->load('getAssignmentRepositoryService.php'));
}, 'App\\Repository\\CropRepository' => function () {
    return ($this->privates['App\Repository\CropRepository'] ?? $this->load('getCropRepositoryService.php'));
}, 'App\\Repository\\CustomerRepository' => function () {
    return ($this->privates['App\Repository\CustomerRepository'] ?? $this->load('getCustomerRepositoryService.php'));
}, 'App\\Repository\\FarmRepository' => function () {
    return ($this->privates['App\Repository\FarmRepository'] ?? $this->load('getFarmRepositoryService.php'));
}, 'App\\Repository\\GreenhouseRepository' => function () {
    return ($this->privates['App\Repository\GreenhouseRepository'] ?? $this->load('getGreenhouseRepositoryService.php'));
}, 'App\\Repository\\HarvestRepository' => function () {
    return ($this->privates['App\Repository\HarvestRepository'] ?? $this->load('getHarvestRepositoryService.php'));
}, 'App\\Repository\\OrderItemRepository' => function () {
    return ($this->privates['App\Repository\OrderItemRepository'] ?? $this->load('getOrderItemRepositoryService.php'));
}, 'App\\Repository\\OrderRepository' => function () {
    return ($this->privates['App\Repository\OrderRepository'] ?? $this->load('getOrderRepositoryService.php'));
}, 'App\\Repository\\PhaseRepository' => function () {
    return ($this->privates['App\Repository\PhaseRepository'] ?? $this->load('getPhaseRepositoryService.php'));
}, 'App\\Repository\\PollinateRepository' => function () {
    return ($this->privates['App\Repository\PollinateRepository'] ?? $this->load('getPollinateRepositoryService.php'));
}, 'App\\Repository\\ProgressionRepository' => function () {
    return ($this->privates['App\Repository\ProgressionRepository'] ?? $this->load('getProgressionRepositoryService.php'));
}, 'App\\Repository\\SheetRepository' => function () {
    return ($this->privates['App\Repository\SheetRepository'] ?? $this->load('getSheetRepositoryService.php'));
}, 'App\\Repository\\SowingRepository' => function () {
    return ($this->privates['App\Repository\SowingRepository'] ?? $this->load('getSowingRepositoryService.php'));
}, 'App\\Repository\\TransplantRepository' => function () {
    return ($this->privates['App\Repository\TransplantRepository'] ?? $this->load('getTransplantRepositoryService.php'));
}, 'App\\Repository\\UnitRepository' => function () {
    return ($this->privates['App\Repository\UnitRepository'] ?? $this->load('getUnitRepositoryService.php'));
}, 'App\\Repository\\UserRepository' => function () {
    return ($this->privates['App\Repository\UserRepository'] ?? $this->load('getUserRepositoryService.php'));
}, 'App\\Repository\\VarietyRepository' => function () {
    return ($this->privates['App\Repository\VarietyRepository'] ?? $this->load('getVarietyRepositoryService.php'));
}))));

$this->services['doctrine.orm.default_entity_manager'] = $instance = \Doctrine\ORM\EntityManager::create(($this->services['doctrine.dbal.default_connection'] ?? $this->load('getDoctrine_Dbal_DefaultConnectionService.php')), $c);

(new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator(array(), array()))->configure($instance);

return $instance;
